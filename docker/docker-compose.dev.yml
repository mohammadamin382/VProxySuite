version: "3.9"
services:
  bot:
    build:
      context: ..
      dockerfile: docker/bot.Dockerfile
    env_file:
      - ../.env
    volumes:
      - ../services/bot:/app
    depends_on:
      - api
    command: poetry run python src/app.py

  api:
    build:
      context: ..
      dockerfile: docker/api.Dockerfile
    env_file:
      - ../.env
    volumes:
      - ../services/api:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    command: poetry run uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload

  worker:
    build:
      context: ..
      dockerfile: docker/worker.Dockerfile
    env_file:
      - ../.env
    volumes:
      - ../services/worker:/app
    depends_on:
      - redis
      - api
    command: poetry run celery -A src.celery_app worker --loglevel=INFO

  reports:
    build:
      context: ..
      dockerfile: docker/reports.Dockerfile
    env_file:
      - ../.env
    volumes:
      - ../services/reports:/app
    depends_on:
      - api
    command: poetry run python src/main.py

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: vproxy
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - "6379:6379"

volumes:
  postgres_data:
